-- Supprime les tables existantes dans le bon ordre pour éviter les erreurs de dépendance.
-- C'est utile pour pouvoir ré-exécuter le script et repartir d'une base propre.
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS posts;
DROP TABLE IF EXISTS users;

-- =================================================================
-- Table: users
-- Stocke les informations d'identification des utilisateurs.
-- =================================================================
CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    role TEXT NOT NULL DEFAULT 'user'
);

-- =================================================================
-- Table: posts
-- Stocke les sujets de discussion créés par les utilisateurs.
-- =================================================================
CREATE TABLE posts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    -- Le titre du post.
    title VARCHAR(100) NOT NULL,

    -- Le contenu principal du post. TEXT est utilisé pour les chaînes de grande taille.
    content TEXT NOT NULL,

    -- Clé étrangère qui lie le post à son auteur dans la table 'users'.
    user_id INTEGER NOT NULL,

    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    -- Déclaration de la contrainte de clé étrangère.
    -- ON DELETE CASCADE: Si un utilisateur est supprimé, tous ses posts sont
    -- automatiquement supprimés. C'est crucial pour la propreté des données.
    CONSTRAINT fk_user
        FOREIGN KEY(user_id) 
        REFERENCES users(id)
        ON DELETE CASCADE
);

-- =================================================================
-- Table: comments
-- Stocke les commentaires faits sur les posts.
-- =================================================================
CREATE TABLE comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content TEXT NOT NULL,
    -- Changer INTEGER en BIGINT
    user_id BIGINT NOT NULL,
    -- Changer INTEGER en BIGINT
    post_id BIGINT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_comment_user
        FOREIGN KEY(user_id)
        REFERENCES users(id)
        ON DELETE CASCADE,
    CONSTRAINT fk_comment_post
        FOREIGN KEY(post_id)
        REFERENCES posts(id)
        ON DELETE CASCADE
);
-- =================================================================
-- Index (Optimisations)
-- Accélèrent les recherches courantes.
-- =================================================================
-- Crée un index sur la colonne user_id de la table posts pour trouver
-- rapidement tous les posts d'un utilisateur.
CREATE INDEX idx_posts_on_user_id ON posts(user_id);

-- Crée un index sur la colonne post_id de la table comments pour trouver
-- rapidement tous les commentaires d'un post.
CREATE INDEX idx_comments_on_post_id ON comments(post_id);

-- Crée un index sur la colonne user_id de la table comments pour trouver
-- rapidement tous les commentaires d'un utilisateur.
CREATE INDEX idx_comments_on_user_id ON comments(user_id);
